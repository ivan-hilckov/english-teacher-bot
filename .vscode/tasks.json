{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "ðŸš€ Start Dev Environment (Clean)",
            "type": "shell",
            "command": "docker",
            "args": [
                "compose",
                "-f",
                "docker-compose.dev.yml",
                "up",
                "-d",
                "--build",
                "--force-recreate",
                "--remove-orphans"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated"
            },
            "problemMatcher": [],
            "detail": "Clean start: rebuild images, recreate containers, remove orphans"
        },
        {
            "label": "ðŸ›‘ Stop Dev Environment",
            "type": "shell",
            "command": "docker",
            "args": [
                "compose",
                "-f",
                "docker-compose.dev.yml",
                "down"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "detail": "Stop all development containers"
        },
        {
            "label": "ðŸ“‹ View Bot Logs",
            "type": "shell",
            "command": "docker",
            "args": [
                "compose",
                "-f",
                "docker-compose.dev.yml",
                "logs",
                "-f",
                "--tail=100",
                "bot-dev"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated"
            },
            "problemMatcher": [],
            "detail": "Follow bot service logs (last 100 lines + live)"
        },
        {
            "label": "ðŸ“‹ View Postgres Logs",
            "type": "shell",
            "command": "docker",
            "args": [
                "compose",
                "-f",
                "docker-compose.dev.yml",
                "logs",
                "-f",
                "--tail=100",
                "postgres"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "detail": "Follow Postgres service logs (last 100 lines + live)"
        },
        {
            "label": "ðŸ“‹ View All Dev Logs",
            "type": "shell",
            "command": "docker",
            "args": [
                "compose",
                "-f",
                "docker-compose.dev.yml",
                "logs",
                "-f",
                "--tail=100"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "detail": "Follow all services logs (last 100 lines + live)"
        },
        {
            "label": "ðŸ“º Live Bot Logs (since now)",
            "type": "shell",
            "command": "docker",
            "args": [
                "compose",
                "-f",
                "docker-compose.dev.yml",
                "logs",
                "-f",
                "--since=1s",
                "bot-dev"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated"
            },
            "problemMatcher": [],
            "detail": "Stream only new bot logs starting now (no backlog)"
        },
        {
            "label": "ðŸ“º Live All Logs (since now)",
            "type": "shell",
            "command": "docker",
            "args": [
                "compose",
                "-f",
                "docker-compose.dev.yml",
                "logs",
                "-f",
                "--since=1s"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "detail": "Stream only new logs for all services starting now"
        },
        {
            "label": "ðŸ”§ Format & Lint Code",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "ruff",
                "format",
                ".",
                "&&",
                "uv",
                "run",
                "ruff",
                "check",
                "--fix",
                "."
            ],
            "options": {
                "shell": {
                    "executable": "/bin/bash",
                    "args": ["-c"]
                }
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "detail": "Format code with Ruff + run linter with auto-fix"
        },
        {
            "label": "ðŸ§ª Run Tests",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "pytest",
                "tests/",
                "-v",
                "--tb=short"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated"
            },
            "problemMatcher": [],
            "detail": "Run all tests with verbose output"
        },
        {
            "label": "ðŸ§ª Run Tests with Coverage",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "pytest",
                "tests/",
                "-v",
                "--tb=short",
                "--cov=app",
                "--cov-report=term-missing",

            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated"
            },
            "problemMatcher": [],
            "detail": "Run tests with coverage report"
        },
        {
            "label": "âœ… Full Quality Check",
            "type": "shell",
            "command": "uv",
            "args": [
                "run",
                "ruff",
                "format",
                ".",
                "&&",
                "uv",
                "run",
                "ruff",
                "check",
                "--fix",
                ".",
                "&&",
                "uv",
                "run",
                "pytest",
                "tests/",
                "-v"
            ],
            "options": {
                "shell": {
                    "executable": "/bin/bash",
                    "args": ["-c"]
                }
            },
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated"
            },
            "problemMatcher": [],
            "detail": "Complete quality check: format + lint + tests (like CI/CD)"
        },
    ]
}
